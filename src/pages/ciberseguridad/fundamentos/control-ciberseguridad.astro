---
import WikiLayout from '../../../layouts/WikiLayout.astro';
---

<WikiLayout title="🧠 Control Objectives - Objetivos de Control" description="Aprende qué son los objetivos de control en ciberseguridad y cómo implementarlos efectivamente">
    
    <!-- Hero Section -->
    <div class="hero-section">
        <div class="hero-content">
            <div class="hero-icon">🧠</div>
            <h1 class="hero-title">Control Objectives</h1>
            <p class="hero-subtitle">Los resultados deseados que deben lograrse al implementar controles de seguridad</p>
        </div>
    </div>

    <!-- Definición Principal -->
    <div class="container mx-auto px-4 py-8">
        <section class="definition-card">
            <div class="card-header">
                <h2>¿Qué son los Control Objectives?</h2>
            </div>
            <div class="card-content">
                <div class="definition-highlight">
                    <p>Los <strong>objetivos de control</strong> son los <strong>resultados deseados</strong> que deben lograrse al implementar uno o más <strong>controles de seguridad</strong>.</p>
                    <div class="focus-note">
                        <span class="emoji">💡</span>
                        <p><strong>No se enfocan en el "cómo", sino en el "qué" se quiere lograr.</strong></p>
                    </div>
                </div>
            </div>
        </section>

        <!-- Objetivos Section -->
        <section class="objectives-section">
            <h2 class="section-title">
                <span class="emoji">🎯</span>
                ¿Qué buscan lograr?
            </h2>
            <div class="objectives-grid">
                <div class="objective-card reduce">
                    <div class="objective-icon">🛡️</div>
                    <h3>Reducir Vulnerabilidades</h3>
                    <p>Minimizar puntos débiles en el sistema</p>
                </div>
                <div class="objective-card prevent">
                    <div class="objective-icon">🚫</div>
                    <h3>Prevenir Explotación</h3>
                    <p>Disminuir la probabilidad de ataques exitosos</p>
                </div>
                <div class="objective-card minimize">
                    <div class="objective-icon">💥</div>
                    <h3>Minimizar Impacto</h3>
                    <p>Reducir daños cuando ocurren incidentes</p>
                </div>
            </div>
        </section>

        <!-- Ejemplos Section -->
        <section class="examples-section">
            <h2 class="section-title">
                <span class="emoji">🛠️</span>
                Ejemplos Prácticos
            </h2>
            <div class="examples-table">
                <div class="table-header">
                    <div class="col-objetivo">Objetivo</div>
                    <div class="col-control">Control Asociado</div>
                </div>
                <div class="table-row">
                    <div class="col-objetivo">
                        <span class="objective-badge prevent">Evitar acceso no autorizado</span>
                    </div>
                    <div class="col-control">
                        <span class="control-tag">ACLs</span>
                        <span class="control-tag">Autenticación multifactor</span>
                    </div>
                </div>
                <div class="table-row">
                    <div class="col-objetivo">
                        <span class="objective-badge detect">Detectar actividades sospechosas</span>
                    </div>
                    <div class="col-control">
                        <span class="control-tag">Logs</span>
                        <span class="control-tag">SIEM</span>
                    </div>
                </div>
                <div class="table-row">
                    <div class="col-objetivo">
                        <span class="objective-badge recover">Recuperarse de ataques</span>
                    </div>
                    <div class="col-control">
                        <span class="control-tag">Plan de respaldo</span>
                        <span class="control-tag">Recuperación</span>
                    </div>
                </div>
            </div>
        </section>

        <!-- Tipos de Control -->
        <section class="control-types-section">
            <h2 class="section-title">
                <span class="emoji">🧱</span>
                Tipos de Control Relacionados
            </h2>
            
            <div class="control-type-card">
                <h3>1. Countermeasures (Contramedidas)</h3>
                <p>Controles aplicados específicamente para mitigar una amenaza identificada.</p>
            </div>

            <div class="metrics-card">
                <h3>2. Métricas de Control:</h3>
                <div class="metrics-grid">
                    <div class="metric-item">
                        <div class="metric-icon">⚙️</div>
                        <div class="metric-content">
                            <strong>Funcionalidad</strong>
                            <span>¿Qué hace?</span>
                        </div>
                    </div>
                    <div class="metric-item">
                        <div class="metric-icon">📈</div>
                        <div class="metric-content">
                            <strong>Efectividad</strong>
                            <span>¿Qué tan bien lo hace?</span>
                        </div>
                    </div>
                    <div class="metric-item">
                        <div class="metric-icon">🔒</div>
                        <div class="metric-content">
                            <strong>Aseguramiento</strong>
                            <span>¿Podemos confiar en que funcione?</span>
                        </div>
                    </div>
                    <div class="metric-item">
                        <div class="metric-icon">💰</div>
                        <div class="metric-content">
                            <strong>Costo-beneficio</strong>
                            <span>¿Vale la pena la inversión?</span>
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Ejemplo Real -->
        <section class="real-example-section">
            <h2 class="section-title">
                <span class="emoji">🏢</span>
                Ejemplo Real
            </h2>
            <div class="example-scenario">
                <div class="scenario-header">
                    <h3>Escenario: Empresa quiere proteger datos de RRHH</h3>
                </div>
                <div class="scenario-steps">
                    <div class="step">
                        <div class="step-number">1</div>
                        <div class="step-content">
                            <strong>Objetivo:</strong> Restringir acceso no autorizado a datos confidenciales
                        </div>
                    </div>
                    <div class="step">
                        <div class="step-number">2</div>
                        <div class="step-content">
                            <strong>Control:</strong> Segmentación de red + políticas de acceso en Active Directory
                        </div>
                    </div>
                    <div class="step">
                        <div class="step-number">3</div>
                        <div class="step-content">
                            <strong>Métrica:</strong> Disminución de incidentes de acceso indebido en 6 meses
                        </div>
                    </div>
                </div>
            </div>
        </section>

        <!-- Técnica Mnemotécnica -->
        <section class="mnemonic-section">
            <div class="mnemonic-card">
                <div class="mnemonic-icon">🧠</div>
                <div class="mnemonic-content">
                    <h3>Técnica Mnemotécnica</h3>
                    <div class="mnemonic-phrase">"Objetivo = Ojalá lo logre"</div>
                    <p>Recuerda que el objetivo es <em>lo que se quiere lograr</em>; el control es <em>lo que se implementa</em>.</p>
                </div>
            </div>
        </section>

        <!-- Consejo Profesional -->
        <section class="professional-tip">
            <div class="tip-header">
                <span class="emoji">💼</span>
                <h3>Consejo Profesional</h3>
            </div>
            <p>Muchos errores de seguridad ocurren porque se implementan controles sin claridad sobre el <strong>objetivo de negocio</strong> que deben cumplir. Siempre pregunta: <em>"¿Qué riesgo quiero reducir con esto?"</em></p>
        </section>

        <!-- Quiz Interactivo -->
        <section class="quiz-section">
            <h2 class="section-title">
                <span class="emoji">🎯</span>
                Quiz de Conocimientos
            </h2>
            
            <div class="quiz-container" id="quizContainer">
                <!-- Quiz questions will be populated by JavaScript -->
            </div>
            
            <div class="quiz-results" id="quizResults" style="display: none;">
                <div class="results-content">
                    <h3 id="resultsTitle"></h3>
                    <p id="resultsMessage"></p>
                    <button class="retry-btn" onclick="restartQuiz()">🔄 Intentar de nuevo</button>
                </div>
            </div>
        </section>
    </div>
</WikiLayout>

<script>
    // Quiz Data
    const quizData = [
        {
            question: "¿Cuál de los siguientes es un objetivo de control válido?",
            options: [
                "Instalar antivirus",
                "Lograr disponibilidad de datos",
                "Ejecutar un backup",
                "Comprar licencias"
            ],
            correct: 1,
            explanation: "Un objetivo de control define el resultado deseado, no la implementación específica."
        },
        {
            question: "¿Cuál es la diferencia entre un control y un objetivo de control?",
            options: [
                "Son lo mismo",
                "El control es el resultado, el objetivo es el medio",
                "El objetivo define el resultado deseado, el control lo implementa",
                "El objetivo es técnico, el control es estratégico"
            ],
            correct: 2,
            explanation: "El objetivo establece QUÉ queremos lograr, el control establece CÓMO lo implementamos."
        },
        {
            question: "Una contramedida es:",
            options: [
                "Un objetivo abstracto",
                "Una forma de recuperar datos",
                "Un control diseñado para enfrentar una amenaza específica",
                "Un método para auditar sistemas"
            ],
            correct: 2,
            explanation: "Las contramedidas son controles específicamente diseñados para mitigar amenazas identificadas."
        }
    ];

    let currentQuestion = 0;
    let score = 0;
    let userAnswers = [];

    // Initialize Quiz
    function initQuiz() {
        currentQuestion = 0;
        score = 0;
        userAnswers = [];
        showQuestion();
    }

    function showQuestion() {
        const container = document.getElementById('quizContainer');
        const question = quizData[currentQuestion];
        
        container.innerHTML = `
            <div class="quiz-question animate-in">
                <div class="question-header">
                    <span class="question-number">Pregunta ${currentQuestion + 1} de ${quizData.length}</span>
                    <div class="progress-bar">
                        <div class="progress-fill" style="width: ${((currentQuestion + 1) / quizData.length) * 100}%"></div>
                    </div>
                </div>
                <h3 class="question-text">${question.question}</h3>
                <div class="options-container">
                    ${question.options.map((option, index) => `
                        <button class="option-btn" onclick="selectAnswer(${index})" data-option="${index}">
                            <span class="option-letter">${String.fromCharCode(65 + index)}</span>
                            <span class="option-text">${option}</span>
                        </button>
                    `).join('')}
                </div>
            </div>
        `;
    }

    function selectAnswer(selectedIndex) {
        userAnswers[currentQuestion] = selectedIndex;
        const question = quizData[currentQuestion];
        const options = document.querySelectorAll('.option-btn');
        
        // Disable all options
        options.forEach((option, index) => {
            option.disabled = true;
            if (index === question.correct) {
                option.classList.add('correct');
            } else if (index === selectedIndex && selectedIndex !== question.correct) {
                option.classList.add('incorrect');
            }
        });

        // Show explanation
        const container = document.getElementById('quizContainer');
        const explanationDiv = document.createElement('div');
        explanationDiv.className = 'explanation animate-in';
        explanationDiv.innerHTML = `
            <div class="explanation-content">
                <h4>${selectedIndex === question.correct ? '✅ ¡Correcto!' : '❌ Incorrecto'}</h4>
                <p>${question.explanation}</p>
            </div>
        `;
        container.appendChild(explanationDiv);

        // Add next button
        setTimeout(() => {
            const nextBtn = document.createElement('button');
            nextBtn.className = 'next-btn';
            nextBtn.textContent = currentQuestion === quizData.length - 1 ? '🏁 Ver Resultados' : '➡️ Siguiente';
            nextBtn.onclick = nextQuestion;
            container.appendChild(nextBtn);
        }, 1000);

        if (selectedIndex === question.correct) {
            score++;
        }
    }

    function nextQuestion() {
        currentQuestion++;
        if (currentQuestion < quizData.length) {
            showQuestion();
        } else {
            showResults();
        }
    }

    function showResults() {
        const container = document.getElementById('quizContainer');
        const resultsDiv = document.getElementById('quizResults');
        const percentage = Math.round((score / quizData.length) * 100);
        
        let title, message, emoji;
        if (percentage >= 80) {
            title = "🏆 ¡Excelente!";
            message = `Has dominado los Control Objectives con ${score}/${quizData.length} respuestas correctas (${percentage}%).`;
            emoji = "🎉";
        } else if (percentage >= 60) {
            title = "👍 Bien hecho";
            message = `Buen trabajo, has obtenido ${score}/${quizData.length} respuestas correctas (${percentage}%). ¡Sigue practicando!`;
            emoji = "💪";
        } else {
            title = "📚 Sigue estudiando";
            message = `Has obtenido ${score}/${quizData.length} respuestas correctas (${percentage}%). Te recomendamos revisar el material nuevamente.`;
            emoji = "🤓";
        }
        
        document.getElementById('resultsTitle').textContent = title;
        document.getElementById('resultsMessage').textContent = message;
        
        container.style.display = 'none';
        resultsDiv.style.display = 'block';
    }

    function restartQuiz() {
        document.getElementById('quizResults').style.display = 'none';
        document.getElementById('quizContainer').style.display = 'block';
        initQuiz();
    }

    // Initialize quiz when page loads
    document.addEventListener('DOMContentLoaded', initQuiz);

    // Smooth animations
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };

    const observer = new IntersectionObserver((entries) => {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate-in');
            }
        });
    }, observerOptions);

    // Observe elements for animation
    document.addEventListener('DOMContentLoaded', () => {
        document.querySelectorAll('section, .card, .example-card').forEach(el => {
            observer.observe(el);
        });
    });
</script>

<style>
    /* Hero Section */
    .hero-section {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 80px 0;
        text-align: center;
        position: relative;
        overflow: hidden;
    }

    .hero-section::before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.1'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E") repeat;
        animation: float 20s infinite linear;
    }

    @keyframes float {
        0% { transform: translateY(0px); }
        100% { transform: translateY(-60px); }
    }

    .hero-content {
        position: relative;
        z-index: 1;
    }

    .hero-icon {
        font-size: 4rem;
        margin-bottom: 1rem;
        animation: bounce 2s infinite;
    }

    @keyframes bounce {
        0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
        40% { transform: translateY(-10px); }
        60% { transform: translateY(-5px); }
    }

    .hero-title {
        font-size: 3.5rem;
        font-weight: 800;
        color: white;
        margin-bottom: 1rem;
        text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    }

    .hero-subtitle {
        font-size: 1.3rem;
        color: rgba(255,255,255,0.9);
        max-width: 600px;
        margin: 0 auto;
    }

    /* Cards */
    .definition-card, .control-type-card, .metrics-card {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border-radius: 20px;
        padding: 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        border: 1px solid rgba(255,255,255,0.2);
        backdrop-filter: blur(10px);
        transition: all 0.3s ease;
    }

    .definition-card:hover, .control-type-card:hover, .metrics-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 20px 40px rgba(0,0,0,0.15);
    }

    .card-header h2 {
        color: #2d3748;
        font-size: 2rem;
        font-weight: 700;
        margin-bottom: 1rem;
    }

    .definition-highlight {
        background: linear-gradient(135deg, #e0f2fe 0%, #f3e5f5 100%);
        padding: 2rem;
        border-radius: 15px;
        border-left: 5px solid #667eea;
    }

    .focus-note {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-top: 1rem;
        padding: 1rem;
        background: rgba(255,255,255,0.8);
        border-radius: 10px;
    }

    .focus-note .emoji {
        font-size: 1.5rem;
    }

    /* Section Titles */
    .section-title {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        font-size: 2rem;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 2rem;
    }

    .section-title .emoji {
        font-size: 2.5rem;
    }

    /* Objectives Grid */
    .objectives-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        margin-bottom: 3rem;
    }

    .objective-card {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        padding: 2rem;
        border-radius: 20px;
        text-align: center;
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        transition: all 0.3s ease;
        border: 2px solid transparent;
    }

    .objective-card:hover {
        transform: translateY(-8px) scale(1.02);
        box-shadow: 0 15px 35px rgba(0,0,0,0.15);
    }

    .objective-card.reduce:hover { border-color: #10b981; }
    .objective-card.prevent:hover { border-color: #f59e0b; }
    .objective-card.minimize:hover { border-color: #ef4444; }

    .objective-icon {
        font-size: 3rem;
        margin-bottom: 1rem;
    }

    .objective-card h3 {
        font-size: 1.3rem;
        font-weight: 700;
        color: #2d3748;
        margin-bottom: 0.5rem;
    }

    /* Examples Table */
    .examples-table {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border-radius: 20px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        margin-bottom: 3rem;
    }

    .table-header {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 2rem;
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        padding: 1.5rem 2rem;
        color: white;
        font-weight: 700;
    }

    .table-row {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 2rem;
        padding: 1.5rem 2rem;
        border-bottom: 1px solid #e2e8f0;
        transition: all 0.3s ease;
    }

    .table-row:hover {
        background: linear-gradient(135deg, #f7fafc 0%, #edf2f7 100%);
    }

    .table-row:last-child {
        border-bottom: none;
    }

    .objective-badge {
        display: inline-block;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        color: white;
        font-size: 0.9rem;
    }

    .objective-badge.prevent { background: linear-gradient(135deg, #10b981, #065f46); }
    .objective-badge.detect { background: linear-gradient(135deg, #f59e0b, #92400e); }
    .objective-badge.recover { background: linear-gradient(135deg, #ef4444, #991b1b); }

    .control-tag {
        display: inline-block;
        background: linear-gradient(135deg, #e0f2fe, #b3e5fc);
        color: #0277bd;
        padding: 0.3rem 0.8rem;
        border-radius: 15px;
        font-size: 0.8rem;
        font-weight: 600;
        margin: 0.2rem;
    }

    /* Metrics Grid */
    .metrics-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
        gap: 1rem;
        margin-top: 1.5rem;
    }

    .metric-item {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem;
        background: linear-gradient(135deg, #f0f9ff, #e0f2fe);
        border-radius: 15px;
        transition: all 0.3s ease;
    }

    .metric-item:hover {
        transform: translateY(-3px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.1);
    }

    .metric-icon {
        font-size: 2rem;
    }

    .metric-content strong {
        display: block;
        font-weight: 700;
        color: #1e40af;
    }

    .metric-content span {
        font-size: 0.9rem;
        color: #64748b;
    }

    /* Real Example */
    .example-scenario {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        margin-bottom: 3rem;
    }

    .scenario-header h3 {
        color: #2d3748;
        font-size: 1.5rem;
        font-weight: 700;
        margin-bottom: 2rem;
        text-align: center;
    }

    .scenario-steps {
        display: flex;
        flex-direction: column;
        gap: 1.5rem;
    }

    .step {
        display: flex;
        align-items: flex-start;
        gap: 1rem;
        padding: 1.5rem;
        background: linear-gradient(135deg, #f0f9ff, #e0f2fe);
        border-radius: 15px;
        transition: all 0.3s ease;
    }

    .step:hover {
        transform: translateX(10px);
        box-shadow: 0 8px 20px rgba(0,0,0,0.1);
    }

    .step-number {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        flex-shrink: 0;
    }

    .step-content {
        flex: 1;
    }

    .step-content strong {
        color: #1e40af;
    }

    /* Mnemonic Section */
    .mnemonic-card {
        background: linear-gradient(135deg, #fef3c7, #fde68a);
        border-radius: 20px;
        padding: 2rem;
        display: flex;
        align-items: center;
        gap: 2rem;
        margin-bottom: 3rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        border: 2px solid #f59e0b;
    }

    .mnemonic-icon {
        font-size: 4rem;
        animation: pulse 2s infinite;
    }

    @keyframes pulse {
        0%, 100% { transform: scale(1); }
        50% { transform: scale(1.1); }
    }

    .mnemonic-phrase {
        font-size: 1.5rem;
        font-weight: 700;
        color: #92400e;
        margin: 1rem 0;
        text-shadow: 1px 1px 2px rgba(0,0,0,0.1);
    }

    /* Professional Tip */
    .professional-tip {
        background: linear-gradient(135deg, #ecfdf5, #d1fae5);
        border-radius: 20px;
        padding: 2rem;
        border-left: 5px solid #10b981;
        margin-bottom: 3rem;
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
    }

    .tip-header {
        display: flex;
        align-items: center;
        gap: 1rem;
        margin-bottom: 1rem;
    }

    .tip-header .emoji {
        font-size: 2rem;
    }

    .tip-header h3 {
        color: #065f46;
        font-weight: 700;
    }

    /* Quiz Styles */
    .quiz-section {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border-radius: 20px;
        padding: 2rem;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        margin-top: 3rem;
    }

    .quiz-question {
        opacity: 0;
        transform: translateY(20px);
        transition: all 0.5s ease;
    }

    .quiz-question.animate-in {
        opacity: 1;
        transform: translateY(0);
    }

    .question-header {
        margin-bottom: 2rem;
    }

    .question-number {
        display: inline-block;
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        padding: 0.5rem 1rem;
        border-radius: 20px;
        font-weight: 600;
        font-size: 0.9rem;
        margin-bottom: 1rem;
    }

    .progress-bar {
        width: 100%;
        height: 8px;
        background: #e2e8f0;
        border-radius: 20px;
        overflow: hidden;
    }

    .progress-fill {
        height: 100%;
        background: linear-gradient(135deg, #667eea, #764ba2);
        border-radius: 20px;
        transition: width 0.5s ease;
    }

    .question-text {
        font-size: 1.3rem;
        font-weight: 600;
        color: #2d3748;
        margin-bottom: 2rem;
        line-height: 1.6;
    }

    .options-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }

    .option-btn {
        display: flex;
        align-items: center;
        gap: 1rem;
        padding: 1rem 1.5rem;
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        border: 2px solid #e2e8f0;
        border-radius: 15px;
        cursor: pointer;
        transition: all 0.3s ease;
        text-align: left;
        width: 100%;
        font-size: 1rem;
    }

    .option-btn:hover:not(:disabled) {
        transform: translateX(5px);
        border-color: #667eea;
        box-shadow: 0 8px 20px rgba(0,0,0,0.1);
    }

    .option-btn:disabled {
        cursor: not-allowed;
    }

    .option-btn.correct {
        background: linear-gradient(145deg, #d1fae5 0%, #a7f3d0 100%);
        border-color: #10b981;
        color: #065f46;
    }

    .option-btn.incorrect {
        background: linear-gradient(145deg, #fee2e2 0%, #fecaca 100%);
        border-color: #ef4444;
        color: #991b1b;
    }

    .option-letter {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        width: 30px;
        height: 30px;
        border-radius: 50%;
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 700;
        flex-shrink: 0;
    }

    .option-btn.correct .option-letter {
        background: linear-gradient(135deg, #10b981, #065f46);
    }

    .option-btn.incorrect .option-letter {
        background: linear-gradient(135deg, #ef4444, #991b1b);
    }

    .option-text {
        flex: 1;
        font-weight: 500;
    }

    .explanation {
        margin-top: 2rem;
        padding: 1.5rem;
        background: linear-gradient(145deg, #f0f9ff 0%, #e0f2fe 100%);
        border-radius: 15px;
        border-left: 4px solid #0ea5e9;
        opacity: 0;
        transform: translateY(10px);
        transition: all 0.5s ease;
    }

    .explanation.animate-in {
        opacity: 1;
        transform: translateY(0);
    }

    .explanation h4 {
        color: #0369a1;
        font-weight: 700;
        margin-bottom: 0.5rem;
    }

    .explanation p {
        color: #1e40af;
        line-height: 1.6;
    }

    .next-btn {
        background: linear-gradient(135deg, #667eea, #764ba2);
        color: white;
        border: none;
        padding: 1rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        margin-top: 1.5rem;
        font-size: 1rem;
        display: block;
        margin-left: auto;
        margin-right: auto;
    }

    .next-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
    }

    .quiz-results {
        text-align: center;
        padding: 3rem;
    }

    .results-content {
        background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
        padding: 3rem;
        border-radius: 20px;
        box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        max-width: 500px;
        margin: 0 auto;
    }

    .results-content h3 {
        font-size: 2rem;
        margin-bottom: 1rem;
        color: #2d3748;
    }

    .results-content p {
        font-size: 1.1rem;
        color: #4a5568;
        margin-bottom: 2rem;
        line-height: 1.6;
    }

    .retry-btn {
        background: linear-gradient(135deg, #10b981, #065f46);
        color: white;
        border: none;
        padding: 1rem 2rem;
        border-radius: 50px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 1rem;
    }

    .retry-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(16, 185, 129, 0.4);
    }

    /* Animations */
    .animate-in {
        animation: slideInUp 0.6s ease forwards;
    }

    @keyframes slideInUp {
        from {
            opacity: 0;
            transform: translateY(30px);
        }
        to {
            opacity: 1;
            transform: translateY(0);
        }
    }

    /* Responsive Design */
    @media (max-width: 768px) {
        .hero-title {
            font-size: 2.5rem;
        }

        .hero-subtitle {
            font-size: 1.1rem;
        }

        .section-title {
            font-size: 1.5rem;
        }

        .section-title .emoji {
            font-size: 2rem;
        }

        .objectives-grid {
            grid-template-columns: 1fr;
        }

        .table-header,
        .table-row {
            grid-template-columns: 1fr;
            gap: 1rem;
        }

        .table-header {
            text-align: center;
        }

        .scenario-steps {
            gap: 1rem;
        }

        .step {
            flex-direction: column;
            text-align: center;
        }

        .mnemonic-card {
            flex-direction: column;
            text-align: center;
        }

        .mnemonic-icon {
            font-size: 3rem;
        }

        .metrics-grid {
            grid-template-columns: 1fr;
        }

        .definition-card,
        .control-type-card,
        .metrics-card,
        .quiz-section {
            padding: 1.5rem;
        }

        .question-text {
            font-size: 1.1rem;
        }

        .option-btn {
            padding: 1rem;
        }

        .results-content {
            padding: 2rem;
        }

        .results-content h3 {
            font-size: 1.5rem;
        }
    }

    @media (max-width: 480px) {
        .hero-section {
            padding: 60px 0;
        }

        .hero-title {
            font-size: 2rem;
        }

        .hero-icon {
            font-size: 3rem;
        }

        .container {
            padding: 0 1rem;
        }

        .definition-card,
        .control-type-card,
        .metrics-card,
        .quiz-section {
            padding: 1rem;
        }

        .objective-card {
            padding: 1.5rem;
        }

        .step {
            padding: 1rem;
        }

        .mnemonic-card {
            padding: 1.5rem;
        }

        .professional-tip {
            padding: 1.5rem;
        }
    }

    /* Print Styles */
    @media print {
        .quiz-section {
            display: none;
        }
        
        .hero-section {
            background: #f8fafc !important;
            color: #2d3748 !important;
        }
        
        .hero-title,
        .hero-subtitle {
            color: #2d3748 !important;
        }
        
        * {
            box-shadow: none !important;
        }
    }